name: Release Creation

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          settings-path: ${{ github.workspace }}

      - name: Update the POM version.
        run: mvn -B versions:set -DnewVersion='${{ env.RELEASE_VERSION }}' --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token}}

      - name: Build with Maven
        run: mvn -B package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Create the release
      - name: Create Release
        uses: softprops/action-gh-release@master
        with:
          release_name: Checkmarx Azure ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: ./build/target/checkmarx-ast-teamcity-plugin.zip
          generate_release_notes: true

      - name: Release to marketplace
        run: |
          curl -i --header "Authorization: Bearer ${{ secrets.JETBRAINS_USER }}" -F pluginId=${{ secrets.JETBRAINS_PLUGIN_ID }} -F file=@./build/target/checkmarx-ast-teamcity-plugin.zip https://plugins.jetbrains.com/plugin/uploadPlugin

      - name: Get latest release notes
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body_release="$(gh api -H "Accept: application/vnd.github.v3+json" /repos/Checkmarx/ast-teamcity-plugin/releases/latest | jq -r '.body' )"
          body_release="${body_release//$'\n'/'%0A'}"
          echo "::set-output name=body_release::$body_release"
      - name: Converts Markdown to HTML
        id: convert
        uses: lifepal/markdown-to-html@v1.2
        with:
          text: "${{ steps.release.outputs.body_release }}"

      - name: Clean html
        id: clean
        run: |
          clean="$(echo "${{ steps.convert.outputs.html }}" | awk '{gsub(/id=.[a-z]+/,"");print}' | tr -d '\n')"
          echo "$clean"
          echo "::set-output name=clean::$clean"
          
      - name: Send a Notification
        id: notify
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URI }}  
          message: "<h1>Checkmarx TeamCity Pluign ${{ env.RELEASE_VERSION }}</h1>${{ steps.clean.outputs.clean }}"
