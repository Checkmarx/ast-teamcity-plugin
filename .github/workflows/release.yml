name: Release Creation

on:
  workflow_call:
    inputs:
      tag:
        description: 'Next release tag'
        required: true
        type: string
      rchannels:
        description: 'Channels to publish development releases'
        required: false
        type: string
  workflow_dispatch:
    inputs:
      tag:
        description: 'Next release tag'
        required: true
        type: string
      rchannels:
        description: 'Channels to publish development releases'
        required: false
        type: string
jobs:
  deleteDevReleases:
    uses: Checkmarx/ast-teamcity-plugin/.github/workflows/delete-dev-releases.yml@main
    with:
      tag: ${{ inputs.rchannels }}
    secrets: inherit
    if: inputs.rchannels
  release:
    runs-on: ubuntu-latest
    outputs:
      CLI_VERSION: ${{ steps.extract_cli_version.outputs.CLI_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Ensure LFS files are checked out
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
   
          # Set the tag in an env var
      - name: Set env
        run: |
          echo "RELEASE_VERSION=${{ inputs.tag }}" >> $GITHUB_ENV
   
      - name: Create Release Name
        run: |
          echo "Creating release name"
          if [ -z "${{ inputs.rchannels }}" ]; then
            echo "GH_RELEASE_TAG_NAME=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV
          else
            echo "GH_RELEASE_TAG_NAME=${{ env.RELEASE_VERSION }}-${{ inputs.rchannels }}" >> $GITHUB_ENV
          fi
           echo "Release name - ${{ env.GH_RELEASE_TAG_NAME }}"

      - name: Extract CLI version
        id: extract_cli_version
        run: |
          CLI_VERSION=$(./checkmarx-ast-teamcity-plugin-agent/src/runner/bin/2.0.0/cx version | grep -Eo '^[0-9]+\.[0-9]+\.[0-9]+')
          echo "CLI version being packed is $CLI_VERSION"
          echo "CLI_VERSION=$CLI_VERSION" >> $GITHUB_ENV
          echo "::set-output name=CLI_VERSION::$CLI_VERSION"


      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          settings-path: ${{ github.workspace }}

      - name: Update the POM version.
        run: mvn -B versions:set -DnewVersion='${{ env.RELEASE_VERSION }}' --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token}}

      - name: Build with Maven
        run: mvn -B package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Create the release
      - name: Create Release or Pre-release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 #master (currently 2.0.5)
        with:
          release_name: Checkmarx Azure ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.GH_RELEASE_TAG_NAME }}
          files: ./build/target/checkmarx-ast-teamcity-plugin.zip
          generate_release_notes: true
          prerelease: ${{ inputs.rchannels != '' && inputs.rchannels != null }}

      - name: Release to marketplace
        run: |
          if [ -z "${{ inputs.rchannels }}" ]; then
            curl -i --header "Authorization: Bearer ${{ secrets.JETBRAINS_USER }}" -F pluginId=${{ secrets.JETBRAINS_PLUGIN_ID }} -F file=@./build/target/checkmarx-ast-teamcity-plugin.zip https://plugins.jetbrains.com/plugin/uploadPlugin
          else
            curl -i --header "Authorization: Bearer ${{ secrets.JETBRAINS_USER }}" -F channel=${{ inputs.rchannels }} -F pluginId=${{ secrets.JETBRAINS_PLUGIN_ID }} -F file=@./build/target/checkmarx-ast-teamcity-plugin.zip https://plugins.jetbrains.com/plugin/uploadPlugin
          fi

  notify:
    needs: release
    if: ${{ inputs.rchannels == '' || inputs.rchannels == null }}
    uses: Checkmarx/plugins-release-workflow/.github/workflows/release-notify.yml@main
    with:
      product_name: AST Teamcity
      release_version: ${{ inputs.tag }}
      cli_release_version: ${{ needs.release.outputs.CLI_VERSION }}
      release_author: "Phoenix Team"
      release_url: https://github.com/Checkmarx/ast-teamcity-plugin/releases/tag/${{ inputs.tag }}
      jira_product_name: AST_TEAMCITY
    secrets: inherit
